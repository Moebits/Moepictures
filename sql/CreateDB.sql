CREATE TABLE IF NOT EXISTS "users" (
    "username" text PRIMARY KEY,
    "email" text UNIQUE NOT NULL,
    "joinDate" date,
    "role" text,
    "bio" text,
    "emailVerified" boolean,
    "$2fa" boolean,
    "publicFavorites" boolean,
    "showRelated" boolean,
    "showTooltips" boolean,
    "showTagBanner" boolean,
    "downloadPixivID" boolean,
    "autosearchInterval" int,
    "upscaledImages" boolean,
    "savedSearches" jsonb,
    "showR18" boolean,
    "premiumExpiration" timestamptz,
    "image" text,
    "imagePost" bigint REFERENCES posts ("postID") ON UPDATE CASCADE ON DELETE SET NULL,
    "ip" inet,
    "banned" boolean,
    "banExpiration" timestamptz,
    "password" text
);

CREATE TABLE IF NOT EXISTS "posts" (
    "postID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "uploader" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "type" text,
    "restrict" text,
    "style" text,
    "thirdParty" boolean,
    "drawn" date,
    "uploadDate" timestamptz,
    "updatedDate" timestamptz,
    "approver" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "approveDate" timestamptz,
    "title" text,
    "translatedTitle" text,
    "artist" text,
    "link" text,
    "commentary" text,
    "translatedCommentary" text,
    "bookmarks" int,
    "purchaseLink" text,
    "hidden" boolean,
    "locked" boolean,
    "private" boolean,
    "hasOriginal" boolean,
    "hasUpscaled" boolean,
    "mirrors" jsonb
);

CREATE TABLE IF NOT EXISTS "unverified posts" (
    "postID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "originalID" bigint REFERENCES posts ("postID") ON UPDATE CASCADE ON DELETE CASCADE,
    "reason" text,
    "duplicates" boolean,
    "newTags" int,
    "uploader" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "type" text,
    "restrict" text,
    "style" text,
    "thirdParty" boolean,
    "drawn" date,
    "uploadDate" timestamptz,
    "updatedDate" timestamptz,
    "approveDate" timestamptz,
    "title" text,
    "translatedTitle" text,
    "artist" text,
    "link" text,
    "commentary" text,
    "translatedCommentary" text,
    "bookmarks" int,
    "purchaseLink" text,
    "hidden" boolean,
    "hasOriginal" boolean,
    "hasUpscaled" boolean,
    "mirrors" jsonb,
    "thumbnail" text,
    "addedTags" text[],
    "removedTags" text[],
    "imageChanged" boolean,
    "changes" jsonb
);

CREATE TABLE IF NOT EXISTS "images" (
    "imageID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES posts ON UPDATE CASCADE ON DELETE CASCADE,
    "type" text,
    "filename" text,
    "width" int,
    "height" int,
    "size" int,
    "order" int,
    "hash" text
);

CREATE TABLE IF NOT EXISTS "unverified images" (
    "imageID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES "unverified posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "type" text,
    "filename" text,
    "width" int,
    "height" int,
    "size" int,
    "order" int,
    "hash" text
);

CREATE TABLE IF NOT EXISTS "tags" (
    "tag" text PRIMARY KEY,
    "type" text,
    "image" text,
    "description" text,
    "creator" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "createDate" timestamptz,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updatedDate" timestamptz,
    "website" text,
    "social" text,
    "twitter" text,
    "fandom" text,
    "pixivTags" text[],
    "banned" boolean
);

CREATE TABLE IF NOT EXISTS "unverified tags" (
    "tag" text PRIMARY KEY,
    "type" text,
    "image" text,
    "description" text,
    "website" text,
    "social" text,
    "twitter" text,
    "fandom" text,
    "pixivTags" text[]
);

CREATE TABLE IF NOT EXISTS "threads" (
    "threadID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "creator" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "createDate" timestamptz,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updatedDate" timestamptz,
    "sticky" boolean,
    "locked" boolean,
    "title" text,
    "content" text
);

CREATE TABLE IF NOT EXISTS "thread reads" (
    "threadID" bigint REFERENCES "threads" ("threadID") ON UPDATE CASCADE ON DELETE CASCADE,
    "username" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE CASCADE,
    "read" boolean,
    PRIMARY KEY ("threadID", "username")
);

CREATE TABLE IF NOT EXISTS "replies" (
    "replyID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "threadID" bigint REFERENCES "threads" ("threadID") ON UPDATE CASCADE ON DELETE CASCADE,
    "creator" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "createDate" timestamptz,
    "updatedDate" timestamptz,
    "content" text
);

CREATE TABLE IF NOT EXISTS "messages" (
    "messageID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "creator" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "createDate" timestamptz,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updatedDate" timestamptz,
    "read" boolean,
    "delete" boolean,
    "title" text,
    "content" text
);

CREATE TABLE IF NOT EXISTS "message recipients" (
    "recipientID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "messageID" bigint REFERENCES "messages" ("messageID") ON UPDATE CASCADE ON DELETE CASCADE,
    "recipient" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "read" boolean,
    "delete" boolean
);

CREATE TABLE IF NOT EXISTS "message replies" (
    "replyID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "messageID" bigint REFERENCES "messages" ("messageID") ON UPDATE CASCADE ON DELETE CASCADE,
    "creator" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "createDate" timestamptz,
    "updatedDate" timestamptz,
    "content" text
);

CREATE TABLE IF NOT EXISTS "tag map" (
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "tag" text REFERENCES "tags" ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY ("postID", "tag")
);

CREATE TABLE IF NOT EXISTS "unverified tag map" (
    "postID" bigint REFERENCES "unverified posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "tag" text REFERENCES "unverified tags" ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY ("postID", "tag")
);

CREATE TABLE IF NOT EXISTS "aliases" (
    "tag" text REFERENCES "tags" ON UPDATE CASCADE ON DELETE CASCADE,
    "alias" text,
    PRIMARY KEY ("tag", "alias")
);

CREATE TABLE IF NOT EXISTS "unverified aliases" (
    "tag" text REFERENCES "unverified tags" ON UPDATE CASCADE ON DELETE CASCADE,
    "alias" text,
    PRIMARY KEY ("tag", "alias")
);

CREATE TABLE IF NOT EXISTS "implications" (
    "tag" text REFERENCES "tags" ON UPDATE CASCADE ON DELETE CASCADE,
    "implication" text REFERENCES "tags" ("tag") ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY ("tag", "implication")
);

CREATE TABLE IF NOT EXISTS "third party" (
    "thirdPartyID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "parentID" bigint REFERENCES "posts" ("postID") ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "unverified third party" (
    "thirdPartyID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES "unverified posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "parentID" bigint REFERENCES "posts" ("postID") ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "groups" (
    "groupID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "slug" text UNIQUE NOT NULL,
    "name" text UNIQUE NOT NULL,
    "restrict" text,
    "description" text,
    "creator" text REFERENCES "users" ON UPDATE CASCADE ON DELETE SET NULL,
    "createDate" timestamptz,
    "updater" text REFERENCES "users" ON UPDATE CASCADE ON DELETE SET NULL,
    "updatedDate" timestamptz
);

CREATE TABLE IF NOT EXISTS "group map" (
    "groupID" bigint REFERENCES "groups" ON UPDATE CASCADE ON DELETE CASCADE,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "order" int,
    PRIMARY KEY ("groupID", "postID")
);

CREATE TABLE IF NOT EXISTS "sessions" (
  "sessionID" varchar PRIMARY KEY NOT NULL,
  "session" json NOT NULL,
  "expires" timestamp(6) NOT NULL
);

CREATE TABLE IF NOT EXISTS "email tokens" (
    "email" text PRIMARY KEY,
    "token" text,
    "expires" timestamptz
);

CREATE TABLE IF NOT EXISTS "2fa tokens" (
    "username" text PRIMARY KEY REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "token" text,
    "qrcode" text
);

CREATE TABLE IF NOT EXISTS "password tokens" (
    "username" text PRIMARY KEY REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "token" text,
    "expires" timestamptz
);

CREATE TABLE IF NOT EXISTS "comments" (
    "commentID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE SET NULL,
    "comment" text,
    "postDate" timestamptz,
    "editedDate" timestamptz
);

CREATE TABLE IF NOT EXISTS "translations" (
    "translationID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updatedDate" timestamptz,
    "order" int,
    "data" jsonb
);

CREATE TABLE IF NOT EXISTS "unverified translations" (
    "translationID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES "unverified posts" ("postID") ON UPDATE CASCADE ON DELETE CASCADE,
    "originalID" bigint REFERENCES posts ("postID") ON UPDATE CASCADE ON DELETE CASCADE,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updatedDate" timestamptz,
    "order" int,
    "data" jsonb,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "favorites" (
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "favoriteDate" timestamptz,
    PRIMARY KEY ("postID", "username")
);

CREATE TABLE IF NOT EXISTS "cuteness" (
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "cuteness" int,
    "cutenessDate" timestamptz,
    PRIMARY KEY ("postID", "username")
);

CREATE TABLE IF NOT EXISTS "favgroups" (
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "slug" text UNIQUE NOT NULL,
    "name" text UNIQUE NOT NULL,
    "private" boolean,
    "createDate" timestamptz,
    PRIMARY KEY ("username", "slug")
);

CREATE TABLE IF NOT EXISTS "favgroup map" (
    "username" text,
    "slug" text,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "order" int,
    PRIMARY KEY ("username", "slug", "postID"),
    FOREIGN KEY ("username", "slug") REFERENCES "favgroups" ("username", "slug") ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "history" (
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "viewDate" timestamptz,
    PRIMARY KEY ("username", "postID")
);

CREATE TABLE IF NOT EXISTS "delete requests" (
    "requestID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "tag" text REFERENCES "tags" ON UPDATE CASCADE ON DELETE CASCADE,
    "group" bigint REFERENCES "groups" ("slug") ON UPDATE CASCADE ON DELETE CASCADE,
    "groupPost" bigint REFERENCES "posts" ("postID") ON UPDATE CASCADE ON DELETE CASCADE,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "alias requests" (
    "requestID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "tag" text REFERENCES "tags" ON UPDATE CASCADE ON DELETE CASCADE,
    "aliasTo" text REFERENCES "tags" ("tag") ON UPDATE CASCADE ON DELETE CASCADE,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "tag edit requests" (
    "requestID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "tag" text REFERENCES "tags" ON UPDATE CASCADE ON DELETE CASCADE,
    "key" text,
    "description" text,
    "image" text,
    "aliases" text[],
    "implications" text[],
    "website" text,
    "social" text,
    "twitter" text,
    "fandom" text,
    "pixivTags" text[],
    "reason" text
);

CREATE TABLE IF NOT EXISTS "group requests" (
    "requestID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "name" text,
    "slug" text,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "group edit requests" (
    "requestID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "username" text REFERENCES "users" ON UPDATE CASCADE ON DELETE CASCADE,
    "group" text REFERENCES "groups" ("slug") ON UPDATE CASCADE ON DELETE CASCADE,
    "name" text,
    "description" text,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "reported comments" (
    "reportID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "type" text,
    "reporter" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE CASCADE,
    "reportDate" timestamptz,
    "commentID" bigint REFERENCES "comments" ON UPDATE CASCADE ON DELETE CASCADE,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "reported threads" (
    "reportID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "type" text,
    "reporter" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE CASCADE,
    "reportDate" timestamptz,
    "threadID" bigint REFERENCES "threads" ON UPDATE CASCADE ON DELETE CASCADE,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "reported replies" (
    "reportID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "type" text,
    "reporter" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE CASCADE,
    "reportDate" timestamptz,
    "replyID" bigint REFERENCES "replies" ON UPDATE CASCADE ON DELETE CASCADE,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "translation history" (
    "historyID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updatedDate" timestamptz,
    "order" int,
    "data" jsonb,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "group history" (
    "historyID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "groupID" bigint REFERENCES "groups" ON UPDATE CASCADE ON DELETE CASCADE,
    "user" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "date" timestamptz,
    "slug" text,
    "name" text,
    "restrict" text,
    "description" text,
    "posts" jsonb,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "tag history" (
    "historyID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "tag" text REFERENCES "tags" ON UPDATE CASCADE ON DELETE CASCADE,
    "user" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "date" timestamptz,
    "key" text,
    "type" text,
    "image" text,
    "description" text,
    "aliases" text[],
    "implications" text[],
    "website" text,
    "social" text,
    "twitter" text,
    "fandom" text,
    "pixivTags" text[],
    "reason" text
);

CREATE TABLE IF NOT EXISTS "post history" (
    "historyID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "postID" bigint REFERENCES "posts" ON UPDATE CASCADE ON DELETE CASCADE,
    "user" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "date" timestamptz,
    "images" text[],
    "uploader" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "updater" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "type" text,
    "restrict" text,
    "style" text,
    "thirdParty" boolean,
    "drawn" date,
    "uploadDate" timestamptz,
    "updatedDate" timestamptz,
    "title" text,
    "translatedTitle" text,
    "artist" text,
    "link" text,
    "commentary" text,
    "translatedCommentary" text,
    "bookmarks" int,
    "purchaseLink" text,
    "mirrors" jsonb,
    "hasOriginal" boolean,
    "hasUpscaled" boolean,
    "artists" text[],
    "characters" text[],
    "series" text[],
    "tags" text[],
    "addedTags" text[],
    "removedTags" text[],
    "imageChanged" boolean,
    "changes" jsonb,
    "reason" text
);

CREATE TABLE IF NOT EXISTS "login history" (
    "loginID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "username" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE CASCADE,
    "type" text,
    "ip" inet,
    "device" text,
    "region" text,
    "timestamp" timestamptz
);

CREATE TABLE IF NOT EXISTS "bans" (
    "banID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "username" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "ip" inet,
    "banner" text REFERENCES "users" ("username") ON UPDATE CASCADE ON DELETE SET NULL,
    "banDate" timestamptz,
    "reason" text,
    "active" boolean
);

CREATE TABLE IF NOT EXISTS "blacklist" (
    "blacklistID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "ip" inet UNIQUE,
    "reason" text,
    "blacklistDate" timestamptz
);

CREATE TABLE IF NOT EXISTS "payments" (
    "paymentID" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "chargeID" text,
    "username" text,
    "email" text
);

CREATE INDEX IF NOT EXISTS "idx_posts"
    ON "posts" USING btree
    ("postID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_post_type" 
    ON "posts" USING btree ("type");

CREATE INDEX IF NOT EXISTS "idx_post_restrict" 
    ON "posts" USING btree ("restrict");

CREATE INDEX IF NOT EXISTS "idx_post_style" 
    ON "posts" USING btree ("style");

CREATE INDEX IF NOT EXISTS "idx_post_uploadDate" 
    ON "posts" USING btree ("uploadDate");

CREATE INDEX IF NOT EXISTS "idx_post_drawn" 
    ON "posts" USING btree ("drawn");

CREATE INDEX IF NOT EXISTS "idx_post_bookmarks" 
    ON "posts" USING btree ("bookmarks");

CREATE INDEX IF NOT EXISTS "idx_images"
    ON "images" USING btree
    ("imageID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_images_size"
    ON "images" USING btree ("size");

CREATE INDEX IF NOT EXISTS "idx_cuteness"
    ON "cuteness" USING btree
    ("postID" ASC, "username" ASC);

CREATE INDEX IF NOT EXISTS "idx_cuteness_cuteness"
    ON "cuteness" USING btree ("cuteness");

CREATE INDEX IF NOT EXISTS "idx_favorites"
    ON "favorites" USING btree
    ("postID" ASC, "username" ASC);

CREATE INDEX IF NOT EXISTS "idx_history"
    ON "history" USING btree
    ("username" ASC, "postID" ASC);

CREATE INDEX IF NOT EXISTS "idx_unverified_aliases"
    ON "unverified aliases" USING btree
    ("tag" ASC, "alias" ASC);

CREATE INDEX IF NOT EXISTS "idx_comments"
    ON "comments" USING btree
    ("commentID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_translations"
    ON "translations" USING btree
    ("translationID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_tag_map"
    ON "tag map" USING btree
    ("postID" ASC, "tag" ASC);

CREATE INDEX IF NOT EXISTS "idx_tags"
    ON "tags" USING btree
    ("tag" ASC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_aliases"
    ON "aliases" USING btree
    ("tag" ASC, "alias" ASC);

CREATE INDEX IF NOT EXISTS "idx_implications"
    ON "implications" USING btree
    ("tag" ASC, "implication" ASC);

CREATE INDEX IF NOT EXISTS "idx_users"
    ON "users" USING btree
    (username ASC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_threads"
    ON "threads" USING btree
    ("threadID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_replies"
    ON "replies" USING btree
    ("replyID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_messages"
    ON "messages" USING btree
    ("messageID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_message_replies"
    ON "message replies" USING btree
    ("replyID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_post_history"
    ON "post history" USING btree
    ("historyID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_tag_history"
    ON "tag history" USING btree
    ("historyID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_translation_history"
    ON "translation history" USING btree
    ("historyID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_unverified_images"
    ON "unverified images" USING btree
    ("imageID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_unverified_posts"
    ON "unverified posts" USING btree
    ("postID" DESC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_unverified_tag_map"
    ON "unverified tag map" USING btree
    ("postID" ASC, "tag" ASC);

CREATE INDEX IF NOT EXISTS "idx_unverified_tags"
    ON "unverified tags" USING btree
    (tag ASC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_unverified_aliases"
    ON "unverified aliases" USING btree
    ("tag" ASC, "alias" ASC);
    
CREATE INDEX IF NOT EXISTS "idx_unverified_translations"
    ON "unverified translations" USING btree
    ("translationID" ASC NULLS LAST);

CREATE INDEX IF NOT EXISTS "idx_sessions_expire"
    ON "sessions" ("expires");